import React, { useState, useEffect } from "react";
import {  Button,  Badge } from "react-bootstrap"; 
import { ToastContainer, toast } from 'react-toastify'; 
import UserService from "../UserService";
import 'react-toastify/dist/ReactToastify.css';
import { useNavigate, Link } from 'react-router-dom';
import './Login.css';

const Admin = () => {
  const [accessKeys, setAccessKeys] = useState([]);
  const [name, setName] = useState('');
  const [revokedKeys, setRevokedKeys] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const token = localStorage.getItem('token');
        const name = localStorage.getItem('name');
        setName(name)

        const keysResponse = await UserService.getKeysGeneratedByAdmin(token);
        setAccessKeys(keysResponse);
      } catch (error) {
        console.error('Error fetching keys:', error);
      }
    };

    fetchData();
  }, []);

  const handleRevokeKey = async (id) => {
    try {
      const token = localStorage.getItem('token');
      await UserService.revokeByAdmin(id, token);
      setRevokedKeys((prev) => [...prev, id]); 
      toast.success(`Key ID ${id} revoked successfully`);
    } catch (error) {
      console.error('Error revoking key:', error);
      toast.error('Failed to revoke key');
    }
  };

  return (
    <div className="heading">
      <ToastContainer />
      <h2><strong>Hello {name}!</strong></h2>
      <p><strong style={{ color: '#28a745', fontWeight: 'bold', fontSize: 'larger' }}>Welcome to Admin Page</strong></p>

      <div>
      <Link to="/soluble" >Click here to get an active key generated by school</Link>
      {/* <a href="/soluble" target="_blank" rel="noopener noreferrer">
        Click here to get an active key generated by school
      </a> */}
    </div>
      

      <div className="cards">
        {accessKeys.map((card) => (
          <div className="card" key={card.id}>
            <h3>KeyID: {card.key}</h3>
            <p>The Key number is 00{card.id}, procured on <strong style={{ color: 'darkgreen' }}>{card.dateOfProcurement}</strong>. 
              It has been actively used since its
              procurement and is set to expire on <strong style={{ color: 'darkred', fontWeight: 'bold', fontSize: 'larger' }}>{card.expiryDate}</strong>. This key plays a 
              crucial role in securing access to essential resources, ensuring smooth operations within the system.</p>
              <p><strong>School Email:{card.schoolEmail} </strong></p>
            <p><strong>Status:</strong>
              <Badge bg={card.status === 'ACTIVE' ? 'success' : 'danger'}>
                {card.status}
              </Badge>
            </p>
            
            {!revokedKeys.includes(card.id) && (
              <Button className="button" onClick={() => handleRevokeKey(card.id)}>Revoke Key</Button>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}

export default Admin;
